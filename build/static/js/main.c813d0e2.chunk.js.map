{"version":3,"sources":["components/Contact.js","services/persons.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["Contact","person","deletePerson","name","number","type","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","console","log","put","delete","Persons","persons","newKeyword","setPersons","filter","indexOf","trim","map","key","personToDelete","find","p","window","confirm","personService","PersonForm","setNotificationMessage","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","existing","value","index","arr","returnedPerson","updatedPersons","message","messageType","setTimeout","catch","error","newPerson","length","concat","target","onChange","Filter","setKeyword","messageStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","errorStyle","Notification","messageObj","className","style","App","notificationMessage","useEffect","initialPersons","ReactDOM","render","document","getElementById"],"mappings":"8LAMeA,EAJC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACvB,OAAO,oCAAE,8BAAOD,EAAOE,KAAd,IAAqBF,EAAOG,QAAc,4BAAQC,KAAK,SAASC,QAASJ,GAA/B,UAA4D,+B,gBCF7GK,EAAU,oCAwBD,EArBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB5B,EAhBA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EAXA,SAACG,EAAIF,GAGlB,OAFAG,QAAQC,IAAI,WAAYJ,GACRL,IAAMU,IAAN,UAAaX,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALI,SAAAG,GAEjB,OADgBP,IAAMW,OAAN,UAAgBZ,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCF5BQ,EAhBC,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAapC,OAHsBF,EAAQG,QAAO,SAAAvB,GAAM,OAAIA,EAAOE,KAAKsB,QAAQH,EAAWI,SAAW,KACxDC,KAAI,SAAA1B,GAAM,OAAI,kBAAC,EAAD,CAAS2B,IAAK3B,EAAOE,KAAMF,OAAQA,EAAQC,aAAc,kBAVnF,SAAAa,GACjB,IAAMc,EAAiBR,EAAQS,MAAK,SAAAC,GAAC,OAAIA,EAAEhB,KAAOA,KAC9CiB,OAAOC,QAAP,iBAAyBJ,EAAe1B,QACxC+B,EAAyBnB,GACpBL,KAAKa,EAAWF,EAAQG,QAAO,SAAAO,GAAC,OAAIA,EAAEhB,KAAOA,OAMoDb,CAAaD,EAAOc,W,QCsFvHoB,EAlGI,SAAC,GAAqD,IAAnDd,EAAkD,EAAlDA,QAASE,EAAyC,EAAzCA,WAAYa,EAA6B,EAA7BA,uBAA6B,EACxCC,mBAAS,IAD+B,mBAC/DC,EAD+D,KACtDC,EADsD,OAEpCF,mBAAS,IAF2B,mBAE/DG,EAF+D,KAEpDC,EAFoD,KAoFtE,OACE,0BAAMC,SAjFU,SAAAC,GAChBA,EAAMC,iBACN,IAAIC,EAAWxB,EAAQS,MAAK,SAACgB,EAAOC,EAAOC,GAAf,OAAuBF,EAAM3C,OAASmC,KAClE,GAAIO,EAAU,CACEb,OAAOC,QAAP,UACTK,EADS,6EAIZO,EAASzC,OAASoC,EAClBxB,QAAQC,IAAI,aAAc4B,EAAS9B,GAAI8B,GACvCX,EACUW,EAAS9B,GAAI8B,GACpBnC,MAAK,SAAAuC,GACJ,IAAIC,EAAc,YAAO7B,GACzB6B,EAAevB,KAAI,SAAAI,GACbA,EAAEhB,KAAO8B,EAAS9B,KACpBgB,EAAE3B,OAASyC,EAASzC,WAGxBmB,EAAW2B,GACXd,EAAuB,CACrBe,QAAQ,WAAD,OAAaN,EAAS1C,MAC7BiD,YAAa,WAEfC,YAAW,WACTjB,EAAuB,CACrBe,QAAS,SAEV,QAEJG,OAAM,SAAAC,GACLnB,EAAuB,CACrBe,QAAQ,kBAAD,OAAoBN,EAAS1C,KAA7B,yCACPiD,YAAa,UAEfC,YAAW,WACTjB,EAAuB,CACrBe,QAAS,SAEV,KACH5B,EAAWF,EAAQG,QAAO,SAAAO,GAAC,OAAIA,EAAEhB,KAAO8B,EAAS9B,eAGlD,CACL,IAAIyC,EAAY,CACdrD,KAAMmC,EACNlC,OAAQoC,EACRzB,GAAIM,EAAQoC,OAAS,GAEvBvB,EACUsB,GACP9C,MAAK,SAAAuC,GACJ1B,EAAWF,EAAQqC,OAAOF,IAC1BpB,EAAuB,CACrBe,QAAQ,SAAD,OAAWK,EAAUrD,MAC5BiD,YAAa,WAEfC,YAAW,WACTjB,EAAuB,CACrBe,QAAS,SAEV,QAEJG,OAAM,SAAAC,GACLnB,EAAuB,CACrBe,QAASI,EAAMJ,QACfC,YAAa,aAIrBpC,QAAQC,IAAI,iBAAkB0B,EAAMgB,UAYlC,sCACQ,2BAAOb,MAAOR,EAASsB,SAVV,SAAAjB,GACvBJ,EAAWI,EAAMgB,OAAOb,UAUpB,6BAFF,WAGU,2BAAOA,MAAON,EAAWoB,SATZ,SAAAjB,GACzBF,EAAaE,EAAMgB,OAAOb,UAQ4C,KAC7D,IACP,6BACE,4BAAQzC,KAAK,UAAb,SAAqC,KAChC,MCxFEwD,EANA,SAAC,GAAgC,IAA9BvC,EAA6B,EAA7BA,WAAYwC,EAAiB,EAAjBA,WAI1B,OAAQ,iDAAsB,2BAAOhB,MAAOxB,EAAYsC,SAHnC,SAACjB,GAClBmB,EAAWnB,EAAMgB,OAAOb,YCF1BiB,EAAe,CACjBC,MAAO,QACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAGZC,EAAa,CACfP,MAAO,MACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAkBHE,EAhBM,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpB,OAA2B,OAAvBA,EAAWtB,QACJ,KAGoB,WAA3BsB,EAAWrB,YAEP,yBAAKsB,UAAU,eAAeC,MAAOZ,GAAeU,EAAWtB,SAK/D,yBAAKuB,UAAU,eAAeC,MAAOJ,GAAaE,EAAWtB,UCO1DyB,EAjCH,WAAO,IAAD,EAEcvC,mBAAS,IAFvB,mBAEThB,EAFS,KAEAE,EAFA,OAGiBc,mBAAS,IAH1B,mBAGTf,EAHS,KAGGwC,EAHH,OAIsCzB,mBAAS,CAAEc,QAAS,KAAM9C,KAAM,WAJtE,mBAITwE,EAJS,KAIYzC,EAJZ,KAchB,OARA0C,qBAAU,WACR5C,IAEGxB,MAAK,SAAAqE,GACJxD,EAAWwD,QAEd,IAGD,6BACE,yCAEA,kBAAC,EAAD,CAAcN,WAAYI,IAE1B,kBAAC,EAAD,CAAQvD,WAAYA,EAAYwC,WAAYA,IAE5C,yCAEA,kBAAC,EAAD,CAAYzC,QAASA,EAASE,WAAYA,EAAYa,uBAAwBA,IAE9E,uCAEA,kBAAC,EAAD,CAASf,QAASA,EAASC,WAAYA,EAAYC,WAAYA,MC7BrEyD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c813d0e2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Contact = ({ person, deletePerson }) => {\r\n    return <><span>{person.name} {person.number}</span><button type=\"button\" onClick={deletePerson}>delete</button><br /></>\r\n}\r\n\r\nexport default Contact","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  console.log(\"updating\", newObject)\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteItem = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  deleteItem\r\n}","import React from 'react'\r\nimport Contact from './Contact'\r\nimport personService from '../services/persons'\r\n\r\nconst Persons = ({ persons, newKeyword, setPersons }) => {\r\n    const deletePerson = id => {\r\n        const personToDelete = persons.find(p => p.id === id)\r\n        if (window.confirm(`Delete ${personToDelete.name}`)) {\r\n            personService.deleteItem(id)\r\n                .then(setPersons(persons.filter(p => p.id !== id)))\r\n\r\n        }\r\n\r\n    }\r\n    const personsToShow = persons.filter(person => person.name.indexOf(newKeyword.trim()) >= 0)\r\n    const rows = () => personsToShow.map(person => <Contact key={person.name} person={person} deletePerson={() => deletePerson(person.id)} />)\r\n\r\n    return rows()\r\n}\r\n\r\nexport default Persons","import React, { useState } from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst PersonForm = ({ persons, setPersons, setNotificationMessage }) => {\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n\r\n  const addPerson = event => {\r\n    event.preventDefault()\r\n    let existing = persons.find((value, index, arr) => value.name === newName)\r\n    if (existing) {\r\n      let replace = window.confirm(\r\n        `${newName} is already added to phonebook, replace the old number with a new one?`\r\n      )\r\n      if (replace) {\r\n        existing.number = newNumber\r\n        console.log('before put', existing.id, existing)\r\n        personService\r\n          .update(existing.id, existing)\r\n          .then(returnedPerson => {\r\n            let updatedPersons = [...persons]\r\n            updatedPersons.map(p => {\r\n              if (p.id === existing.id) {\r\n                p.number = existing.number\r\n              }\r\n            })\r\n            setPersons(updatedPersons)\r\n            setNotificationMessage({\r\n              message: `Updated ${existing.name}`,\r\n              messageType: 'notice'\r\n            })\r\n            setTimeout(() => {\r\n              setNotificationMessage({\r\n                message: null\r\n              })\r\n            }, 5000)\r\n          })\r\n          .catch(error => {\r\n            setNotificationMessage({\r\n              message: `Information of ${existing.name} has already been removed from server`,\r\n              messageType: 'error'\r\n            })\r\n            setTimeout(() => {\r\n              setNotificationMessage({\r\n                message: null\r\n              })\r\n            }, 5000)\r\n            setPersons(persons.filter(p => p.id !== existing.id))\r\n          })\r\n      }\r\n    } else {\r\n      let newPerson = {\r\n        name: newName,\r\n        number: newNumber,\r\n        id: persons.length + 1\r\n      }\r\n      personService\r\n        .create(newPerson)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(newPerson))\r\n          setNotificationMessage({\r\n            message: `Added ${newPerson.name}`,\r\n            messageType: 'notice'\r\n          })\r\n          setTimeout(() => {\r\n            setNotificationMessage({\r\n              message: null\r\n            })\r\n          }, 5000)\r\n        })\r\n        .catch(error => {\r\n          setNotificationMessage({\r\n            message: error.message,\r\n            messageType: 'error'\r\n          })\r\n        })\r\n    }\r\n    console.log('button clicked', event.target)\r\n  }\r\n\r\n  const handleNameChange = event => {\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = event => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={addPerson}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n        <br />\r\n        number: <input value={newNumber} onChange={handleNumberChange} />{' '}\r\n      </div>{' '}\r\n      <div>\r\n        <button type=\"submit\"> add </button>{' '}\r\n      </div>{' '}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Filter = ({ newKeyword, setKeyword }) => {\r\n    const handleSearch = (event) => {\r\n        setKeyword(event.target.value)\r\n    }\r\n    return (<div>filter shown with<input value={newKeyword} onChange={handleSearch} /></div>)\r\n}\r\nexport default Filter ","import React from 'react'\r\n\r\nconst messageStyle = {\r\n    color: 'green',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n}\r\n\r\nconst errorStyle = {\r\n    color: 'red',\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n}\r\nconst Notification = ({ messageObj }) => {\r\n    if (messageObj.message === null) {\r\n        return null\r\n    }\r\n\r\n    if (messageObj.messageType === \"notice\") {\r\n        return (\r\n            <div className=\"notification\" style={messageStyle}>{messageObj.message}</div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"notification\" style={errorStyle}>{messageObj.message}</div>\r\n        )\r\n    }\r\n}\r\nexport default Notification","import React, { useState, useEffect } from 'react';\r\nimport Persons from './components/Persons'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport personService from './services/persons'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n\r\n  const [persons, setPersons] = useState([])\r\n  const [newKeyword, setKeyword] = useState('')\r\n  const [notificationMessage, setNotificationMessage] = useState({ message: null, type: \"notice\" })\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification messageObj={notificationMessage} />\r\n\r\n      <Filter newKeyword={newKeyword} setKeyword={setKeyword} />\r\n\r\n      <h3>add a new</h3>\r\n\r\n      <PersonForm persons={persons} setPersons={setPersons} setNotificationMessage={setNotificationMessage} />\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      <Persons persons={persons} newKeyword={newKeyword} setPersons={setPersons} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}